" General {

    "Un set Spelling
    set nospell
    set number
    "Snipmate author
    let g:snips_author = 'Pedro-Juan Ferrer <vehrka@gmail.com>'
    " No session autosave
    let g:session_autosave = 'no'

" }
" GUI {

    " Set color scheme that I like.
    "
    if has('gui_running')
        " --------------------------------------------------------
        " Set font
        "
        set guifont=DejaVu\ Sans\ Mono\ 12
        " --------------------------------------------------------
        " Remove Toobar in gui
        "
        set guioptions-=T
        " --------------------------------------------------------
        " Remove menu bar in gui
        "
        set guioptions-=m
        " --------------------------------------------------------
        "  Add tab pages
        "
        set guioptions+=e
        " --------------------------------------------------------
        "  GUI tab label
        "
        set guitablabel=%M\ %t
    else
        set t_Co=256
    endif
    colorscheme molokai

" }

" Key (re)Mappings {

    " Mapping the leader to space
    "
    let mapleader = " "

    " How many times
    "
    nmap <leader>s :%s///g<LEFT><LEFT><LEFT>
    vmap <leader>s :s///g<LEFT><LEFT><LEFT>

    " Remove trailing spaces
    nmap <leader>t :%s/ \+$//g<CR>

    " Added by Tim to map alt-left/right to flip through buffers
    "
    if has('gui_running')
        nmap <A-h> :bp<CR>
        nmap <A-l> :bn<CR>
    else
        nmap <Esc>h :bp<cr>
        nmap <Esc>l :bn<cr>
    endif

    " --------------------------------------------------------
    " I never want regular Visual mode
    "
    nnoremap    v   <C-V>
    nnoremap <C-V>     v
    vnoremap    v   <C-V>
    vnoremap <C-V>     v


    " Come on... Maximizing a window when arriving??
    "
    map <C-J> <C-W>j
    map <C-K> <C-W>k
    map <C-L> <C-W>l
    map <C-H> <C-W>h

    "
    " EASIER FORMATTING OF PARAGRAPHS
    "
    vmap Q gq
    nmap Q gqap

    "
    " space scroll in normal mode
    "
    noremap <C-space> <C-F>
    noremap <S-space> <C-B>

    "
    " In visual mode C-r gets the selected text and ofers replace
    "
    vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

    " Make vaa select the entire file...
    vmap aa VGo1G

    " NERDTree
    map <F2> :NERDTreeToggle<cr>

    "
    " NERDCommenter
    "
    map <F4> <leader>c<space>

    "
    " F5 to list buffers and choose one
    "
    :nnoremap <F5> :buffers<CR>:buffer<Space>

    " Change mapping to RIV"
    nunmap <C-e>

    "
    " change mapping for deactivate highlight
    if exists('g:spf13_clear_search_highlight')
        nmap <silent> <leader><cr> :nohlsearch<CR>
    else
        nmap <silent> <leader><cr> :set invhlsearch<CR>
    endif
" }

" Functions {

" Vertical Split Buffer Function
" http://stackoverflow.com/questions/4571494/open-a-buffer-as-a-vertical-split-in-vim
function VerticalSplitBuffer(buffer)
    execute "vert belowright sb" a:buffer
endfunction

" Vertical Split Buffer Mapping
command -nargs=1 Vbuffer call VerticalSplitBuffer(<f-args>)

" }

" Autocommands {

" For CSV plugin
"
autocmd BufNewFile,BufRead *.csv setf csv
autocmd BufNewFile,BufRead *.tsv setf csv
autocmd BufNewFile,BufRead *.tsv Delimiter \t
autocmd BufNewFile,BufRead *.tsv setlocal ts=20 sw=25
" }

" For RST processing
"
autocmd BufNewFile,BufReadPre *.rst set cc=80 tw=79

set spell spelllang=es_es

" For XML syntax
"
let g:xml_syntax_folding=1
au FileType xml setlocal foldmethod=syntax
" }
